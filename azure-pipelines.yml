# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  - name: CustomParams.ProjectName
    value: 'Digbyswift.Umbraco.UnitTesting'
  - name: CustomParams.SonarProjectKey
    value: 'digbyswift-oss_digbyswift-umbraco-unittesting'
  - name: CustomParams.TestProjects
    value: '**/*[Tt]ests/*.csproj'
  - name: CustomParams.PackProjects
    value: '**/*.csproj;!**/*.Tests.csproj'
  - name: CustomParams.Solution
    value: '**/*.sln'
  - name: CustomParams.NugetPackagesPath
    value: '$(Pipeline.Workspace)/.nuget/packages'
  - name: CustomParams.BuildPlatform
    value: 'Any CPU'
  - name: CustomParams.BuildConfiguration
    value: 'Release'

name: $(date:yyyyMMdd)$(rev:.r)

steps:
- task: PowerShell@2
  displayName: Create NuGet cache directory
  inputs:
    targetType: inline
    script: New-Item -ItemType directory -Path $(CustomParams.NugetPackagesPath)

- task: Cache@2
  displayName: Cache NuGet files
  inputs:
    key: nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**,!**/obj/**
    path: $(CustomParams.NugetPackagesPath)
    cacheHitVar: NUGET_CACHE_RESTORED
    restoreKeys: >-
      nuget | "$(Agent.OS)"
      nuget

- task: DotNetCoreCLI@2
  displayName: Restore
  condition: ne(variables.NUGET_CACHE_RESTORED, true)
  inputs:
    command: restore
    projects: '**/*.csproj'
    arguments: --locked-mode
    restoreArguments: --locked-mode
    verbosityRestore: Detailed
    verbosityPack: Detailed

- task: SonarCloudPrepare@3
  displayName: Prepare analysis on SonarQube Cloud
  inputs:
    SonarQube: 'SonarCloud'
    organization: 'digbyswift-oss'
    scannerMode: 'dotnet'
    projectKey: $(CustomParams.SonarProjectKey)
    projectName: $(CustomParams.ProjectName)
    projectVersion: $(Build.BuildNumber)

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(CustomParams.Solution)'
    arguments: --packages $(CustomParams.NugetPackagesPath) --configuration $(CustomParams.BuildConfiguration)
    verbosityRestore: Detailed
    verbosityPack: Detailed

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: $(CustomParams.TestProjects)
    arguments: --configuration $(CustomParams.BuildConfiguration)
    verbosityRestore: Detailed
    verbosityPack: Detailed

- task: SonarCloudAnalyze@3
  displayName: Run code analysis

- task: SonarCloudPublish@3
  displayName: Publish quality gate result
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    publishWebProjects: True
    projects: $(CustomParams.PackProjects)
    arguments: --no-build --configuration $(CustomParams.BuildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:EnvironmentName=Production
    zipAfterPublish: True
    modifyOutputPath: false
    verbosityRestore: Detailed
    nobuild: true
    includesymbols: true
    verbosityPack: Detailed

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
